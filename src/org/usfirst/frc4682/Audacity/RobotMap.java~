// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc4682.Audacity;
    
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.Victor;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController chassisLeftMotor;
    public static SpeedController chassisRightMotor;
    public static RobotDrive chassisDrive;
    public static DigitalOutput feederPiston;
    public static SpeedController shooterLauncher;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        chassisLeftMotor = new Victor(1, 3);
	LiveWindow.addActuator("Chassis", "Left Motor", (Victor) chassisLeftMotor);
        
        chassisRightMotor = new Victor(1, 4);
	LiveWindow.addActuator("Chassis", "Right Motor", (Victor) chassisRightMotor);
        
        chassisDrive = new RobotDrive(chassisLeftMotor, chassisRightMotor);
	
        chassisDrive.setSafetyEnabled(true);
        chassisDrive.setExpiration(0.1);
        chassisDrive.setSensitivity(0.5);
        chassisDrive.setMaxOutput(1.0);
        
        feederPiston = new DigitalOutput(1, 1);
	
        
        shooterLauncher = new Victor(1, 5);
	LiveWindow.addActuator("Shooter", "Launcher", (Victor) shooterLauncher);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
